searchState.loadedDescShard("imara_diff", 0, "Imara-diff is a solid (imara in swahili) diff library for …\n<code>imara-diff</code> supports multiple different algorithms for …\nA variation of the <code>patience</code> diff algorithm described by …\nAn implementation of the linear space variant of Myers  …\nSame as <code>Myers</code> but the early abort heuristics are disabled …\nA <code>Sink</code> that creates a textual diff in the format typically …\nComputes an edit-script that transforms <code>input.before</code> into …\nComputes an edit-script that transforms <code>before</code> into <code>after</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new <code>UnifiedDiffBuilder</code> for the given <code>input</code>, that …\nCreate a new <code>UnifiedDiffBuilder</code> for the given <code>input</code>, that …\nTwo lists of interned tokens that can be compared with the …\nAn interner that allows for fast access of tokens produced …\nA token represented as an interned integer.\nRemove all interned tokens.\nErases <code>first_erased_token</code> and any tokens interned …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIntern <code>token</code> and return a the interned integer.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an Interner with initial capacity <code>capacity</code>.\nCreate an Interner with an initial capacity calculated by …\nReturns to total number of <strong>distinct</strong> tokens currently …\nreplaces <code>self.before</code> wtih the iterned Tokens yielded by …\nreplaces <code>self.before</code> wtih the iterned Tokens yielded by …\nA <code>Sink</code> which wraps a different sink and counts the number …\nTrait for processing the edit-scripts computed with <code>diff</code>\nThis function is called after all calls to <code>process_change</code> …\nReturns the argument unchanged.\nTotal number of recorded inserted <code>tokens</code>. Computed by …\nCalls <code>U::from(self)</code>.\nThis method is called whenever a diff <code>algorithm</code> finds a …\nTotal number of recorded inserted <code>tokens</code>. Computed by …\nUtility method that constructs a <code>Counter</code> that tracks the …\nThe <code>Sink</code> for which the counter records <code>tokens</code>. All calls …\nA <code>TokenSource</code> that returns the lines of a byte slice as …\nA <code>TokenSource</code> that returns the lines of a <code>str</code> as tokens. …\nReturns a <code>TokenSource</code> that uses the lines in <code>data</code> as …\nReturns a <code>TokenSource</code> that uses the lines in <code>data</code> as …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a <code>TokenSource</code> that uses the lines in <code>data</code> as …\nReturns a <code>TokenSource</code> that uses the lines in <code>data</code> as …")